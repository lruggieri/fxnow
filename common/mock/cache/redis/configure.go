// Code generated by mockery v2.20.2. DO NOT EDIT.

package mockredis

import (
	redis "github.com/lruggieri/fxnow/common/cache/redis"
	mock "github.com/stretchr/testify/mock"
)

// Configure is an autogenerated mock type for the Configure type
type Configure struct {
	mock.Mock
}

type Configure_Expecter struct {
	mock *mock.Mock
}

func (_m *Configure) EXPECT() *Configure_Expecter {
	return &Configure_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: opt
func (_m *Configure) Execute(opt *redis.Config) {
	_m.Called(opt)
}

// Configure_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type Configure_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - opt *redis.Config
func (_e *Configure_Expecter) Execute(opt interface{}) *Configure_Execute_Call {
	return &Configure_Execute_Call{Call: _e.mock.On("Execute", opt)}
}

func (_c *Configure_Execute_Call) Run(run func(opt *redis.Config)) *Configure_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*redis.Config))
	})
	return _c
}

func (_c *Configure_Execute_Call) Return() *Configure_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *Configure_Execute_Call) RunAndReturn(run func(*redis.Config)) *Configure_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewConfigure interface {
	mock.TestingT
	Cleanup(func())
}

// NewConfigure creates a new instance of Configure. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConfigure(t mockConstructorTestingTNewConfigure) *Configure {
	mock := &Configure{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
